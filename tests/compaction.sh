#!/bin/bash
source lib/target-system.sh
source lib/report.sh
source lib/pressure.sh
source lib/highalloc.sh
source lib/cma.sh

SEQ=$1
KERNEL=$2
ANALYSIS=$3
BENCH_TYPE=$4

MEM=512
HIGHALLOC_ORDER=3
REPEAT_HIGHALLOC=1

GFP_HIGHUSER=0x200d2
GFP_HIGHUSER_MOVABLE=0x200da
HIGHALLOC_GFPFLAGS=$GFP_HIGHUSER_MOVABLE
HIGHALLOC_GFPFLAGS=$GFP_HIGHUSER


if [ "$BENCH_TYPE" == "hogger-only" ]; then
	HOGGER_PRESSURE=8
	SPREAD_HOGGER_PRESSURE=$(($HOGGER_PRESSURE - 2))

	BACKGROUND_BUILD_THREADS=0

	HIGHALLOC_PERCENTAGE=20

	ZRAM_SIZE=192M

elif [ "$BENCH_TYPE" == "hogger-build" ]; then
	HOGGER_PRESSURE=8
	SPREAD_HOGGER_PRESSURE=$(($HOGGER_PRESSURE - 2))

	BACKGROUND_BUILD_THREADS=1

	HIGHALLOC_PERCENTAGE=20

	ZRAM_SIZE=192M

elif [ "$BENCH_TYPE" == "mixed-frag-movable" ]; then
	HOGGER_PRESSURE=4
	SPREAD_HOGGER_PRESSURE=4

	FRAGALLOC_FREE_PERCENTAGE=75
	FRAGALLOC_GFPFLAGS=$GFP_HIGHUSER_MOVABLE

	BACKGROUND_BUILD_THREADS=1

	HIGHALLOC_PERCENTAGE=20

	ZRAM_SIZE=32M

elif [ "$BENCH_TYPE" == "mixed-frag-unmovable" ]; then
	HOGGER_PRESSURE=4
	SPREAD_HOGGER_PRESSURE=4

	FRAGALLOC_FREE_PERCENTAGE=75
	FRAGALLOC_GFPFLAGS=$GFP_HIGHUSER

	BACKGROUND_BUILD_THREADS=1

	HIGHALLOC_PERCENTAGE=20

	ZRAM_SIZE=32M

elif [ "$BENCH_TYPE" == "hogger-frag-movable" ]; then
	HOGGER_PRESSURE=4
	SPREAD_HOGGER_PRESSURE=0

	FRAGALLOC_FREE_PERCENTAGE=75
	FRAGALLOC_GFPFLAGS=$GFP_HIGHUSER_MOVABLE

	BACKGROUND_BUILD_THREADS=0

	HIGHALLOC_PERCENTAGE=20

	ZRAM_SIZE=32M

elif [ "$BENCH_TYPE" == "hogger-frag-unmovable" ]; then
	HOGGER_PRESSURE=4
	SPREAD_HOGGER_PRESSURE=0

	FRAGALLOC_FREE_PERCENTAGE=75
	FRAGALLOC_GFPFLAGS=$GFP_HIGHUSER

	BACKGROUND_BUILD_THREADS=0

	HIGHALLOC_PERCENTAGE=20

	ZRAM_SIZE=32M

elif [ "$BENCH_TYPE" == "build-frag-movable" ]; then
	FRAGALLOC_FREE_PERCENTAGE=75
	FRAGALLOC_GFPFLAGS=$GFP_HIGHUSER_MOVABLE

	BACKGROUND_BUILD_THREADS=8

	HIGHALLOC_PERCENTAGE=20

	ZRAM_SIZE=32M

elif [ "$BENCH_TYPE" == "build-frag-unmovable" ]; then
	FRAGALLOC_FREE_PERCENTAGE=75
	FRAGALLOC_GFPFLAGS=$GFP_HIGHUSER

	BACKGROUND_BUILD_THREADS=8

	HIGHALLOC_PERCENTAGE=20

	ZRAM_SIZE=32M

elif [ "$BENCH_TYPE" == "build-frag-fragmentation" ]; then
	FRAGALLOC_FREE_PERCENTAGE=75
	FRAGALLOC_GFPFLAGS=$GFP_HIGHUSER_MOVABLE

	BACKGROUND_BUILD_THREADS=8

	HIGHALLOC_PERCENTAGE=20

	ZRAM_SIZE=32M
	HIGHALLOC_GFPFLAGS=$GFP_HIGHUSER_MOVABLE
	REPEAT_HIGHALLOC=5

else
	exit;
fi

run_highalloc_repeat()
{
	local i

	for i in `seq 1 $REPEAT_HIGHALLOC`; do
		setup_build_pressure $BACKGROUND_BUILD_THREADS

		get_report
		run_highalloc
		get_report 1
	done

}

#### Start benchmark ####
DIR=result-compaction-$BENCH_TYPE

setup_report "$KERNEL" "$MEM" "$SEQ" "$DIR" "$ANALYSIS"
clear_result_log
if [ "$TRACEPOINT_ON" == "1" ]; then
	PARAM="trace_buf_size=4M trace_event=compaction:*"
	MEM=$(($MEM+32))
fi
if [ "$PAGEOWNER_ON" == "1" ]; then
	PARAM="page_owner=on "$PARAM
fi
PARAM="transparent_hugepage=never "$PARAM

if [ "$OPTIONS" != "" ]; then
	WITH_CMA=`get_value "$OPTIONS" WITH_CMA`
fi

if [ "$WITH_CMA" != "" ]; then
	setup_cma $CMA_AREA
	PARAM="cma_test_areas=compaction_benchmark "$PARAM
fi

setup_target "$KERNEL" "$MEM" "$PARAM"
launch_target
wait_target

setup_swap_zram $ZRAM_SIZE
setup_highalloc $HIGHALLOC_ORDER $HIGHALLOC_GFPFLAGS $HIGHALLOC_PERCENTAGE

setup_kernel_mem_pressure $FRAGALLOC_FREE_PERCENTAGE $FRAGALLOC_GFPFLAGS
setup_anonymous_mem_pressure $HOGGER_PRESSURE $SPREAD_HOGGER_PRESSURE
get_report

run_highalloc_repeat

shutdown_target
